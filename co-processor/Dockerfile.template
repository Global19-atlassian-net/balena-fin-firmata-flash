ARG NODEJS_VERSION="12"

## buildstep base image
FROM balenalib/%%BALENA_MACHINE_NAME%%-node:${NODEJS_VERSION}-build AS buildstep
# install required packages
RUN install_packages \
    libgirepository1.0-dev

WORKDIR /usr/src/app
COPY ./app/package.json package.json
RUN JOBS=MAX npm install --unsafe-perm --production && npm cache clean --force

## target base image
FROM balenalib/%%BALENA_MACHINE_NAME%%-node:${NODEJS_VERSION}-run
ENV BALENA_OPENOCD_VERSION 0.0.1
ENV BALENA_FIN_SDK_VERSION 0.2.0

WORKDIR /usr/src/app
# gather compiled node modules from buildstep
COPY --from=buildstep /usr/src/app/node_modules node_modules

# install required packages
RUN install_packages \
    ftdi-eeprom \
    libftdi-dev \
    screen \
    telnet \
    jq \
# install openocd
    && curl -Ls https://github.com/balena-io-playground/balena-fin-openocd/releases/download/v${BALENA_OPENOCD_VERSION}/openocd.tar.gz | tar -xvz -C . \
    && chmod +x install.sh && ./install.sh \
# install the balenaFin sdk
    && curl -Ls https://github.com/balena-io/balena-fin-sdk/releases/download/v${BALENA_FIN_SDK_VERSION}/balena-fin-sdk-v${BALENA_FIN_SDK_VERSION}.tar.gz | tar -xvz -C . \
    && mv Fin-0.2.typelib /usr/lib/arm-linux-gnueabihf/girepository-1.0/ && mv libfin.so /usr/lib/arm-linux-gnueabihf/

# Move app to filesystem
COPY ./app ./
RUN chmod +x flash.sh && chmod +x ./openocd/openocd-v1.0.sh && chmod +x ./openocd/openocd-v1.1.sh

# Start app
CMD ["bash", "/usr/src/app/start.sh"]
